name: Deploy

on:
  push:
    branches:
#      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v2
        with:
          version: '23.0.0'
          java-version: '17'

      - name: Build native image
        run: |
          ./mvnw package -Pnative

      - name: Package Lambda deployment
        run: |
          mkdir lambda
          cp target/aws-lambda-java-spring-boot-sqlite native lambda/bootstrap
          zip -r ../lambda-deployment.zip .
          cd ..

      - name: Upload to S3
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 cp lambda-deployment.zip ${{ secrets.UPLOAD_BUCKET }}/lambda-deployment.zip

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file cloudformation.yaml \
            --stack-name spring-boot-graalvm-stack \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              S3Bucket=my-app-bucket \
              S3Key=my-spring-boot-app.zip